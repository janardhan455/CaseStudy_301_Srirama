node {
	 
	 stage('Git CheckOut') {
	    git branch: 'main', url: 'https://github.com/janardhan455/CaseStudy_301_Srirama.git'
	 }
	 
	 def project_path="JenkinsPipeLine/petclinic-code"
	 
	 dir(project_path) {
	 
	 stage('Maven Clean') {
	    sh 'mvn clean'
	 }
	 
	  stage('Maven Compile') {
	    sh 'mvn compile'
	 }
	 
	 stage('Maven Testing') {
	    sh 'mvn test'
	 }
	 
	 stage('Maven Package') {
	    sh 'mvn package'
	 }
	 
	 stage('Archive Artifacts') {
	    archive 'target/*.war'
	 }
	

	   stage('Archive into Artifactory') {
	rtUpload (
	    serverId: '1',
	    spec: '''{
	          "files": [
	            {
	              "pattern": "**/*.war",
				  "target": "generic-snapshot/"
	              
	            }
	         ]
	    }''',
	 
	    // Optional - Associate the uploaded files with the following custom build name and build number,
	    // as build artifacts.
	    // If not set, the files will be associated with the default build name and build number (i.e the
	    // the Jenkins job name and number).
	    buildName: 'petclinic',
	    buildNumber: '1'
	)
	}
	

	 stage('Getting Ready For Ansible') {
	    sh 'cp -rf target/*.war ../../JenkinsPipeLine/Tomcat/files/'
	    sh "echo '<h1> Task Build ID: ${env.BUILD_DISPLAY_NAME}</h1>' > ../../JenkinsPipeLine/Tomcat/files/jenkins.html"
	 }
	  
	 }
	

	 def project_ansible="JenkinsPipeLine/Tomcat/"
	 dir(project_ansible){
	  
	 stage('Ansible Deployment') {
	    sh 'ansible-playbook webserver.yaml'
	 }
	

	 }
	 
	}

